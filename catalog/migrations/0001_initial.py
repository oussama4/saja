# Generated by Django 2.2.12 on 2020-04-22 13:55

import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'attribut de produit',
                'verbose_name_plural': 'attributs de produit',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('group_title', models.CharField(max_length=100, null=True, verbose_name='titre de groupe')),
                ('body', wagtail.core.fields.StreamField([('connect', wagtail.core.blocks.StructBlock([('media_title', wagtail.core.blocks.CharBlock(help_text='le titre de paragraphe', max_length=60, required=True)), ('media_text', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'bold', 'italic', 'link'], help_text='le paragraphe de  medias sociaux partie', required=True)), ('newsletter_title', wagtail.core.blocks.CharBlock(help_text='le titre de NEWSLETTER', max_length=50, required=True)), ('newsletter_text', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'bold', 'italic', 'link'], help_text='le paragraphe de NEWSLETTER partie', required=True))])), ('paragraphe', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='le titre de paragraphe', max_length=50, required=True)), ('text', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'bold', 'italic', 'link'], help_text='le paragraphe de la marque', required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='image', required=False))]))], blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Marque',
                'verbose_name_plural': 'Marques',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('color', colorfield.fields.ColorField(default='#F8FCFF', max_length=18)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Titre')),
                ('slug', models.SlugField(unique=True)),
                ('description', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('features', wagtail.core.fields.StreamField([('features', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock(max_length=150, min_length=5)))], blank=True, help_text='caractéristiques du produit', null=True, verbose_name='caractéristique')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='prix')),
                ('has_discount', models.BooleanField(default=False, verbose_name='a une remise ?')),
                ('discount_percent', models.PositiveSmallIntegerField(default=20, validators=[django.core.validators.MaxValueValidator(90)], verbose_name='pourcentage de remise')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ProductRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Titre')),
                ('slug', models.SlugField(unique=True)),
                ('description', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranges', to='catalog.Brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranges', to='catalog.Category')),
                ('range_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='image de gamme')),
            ],
            options={
                'verbose_name': 'Gamme',
                'verbose_name_plural': 'Gammes',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('product', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='catalog.Product')),
                ('product_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='extrat image pour produit')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_range',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='catalog.ProductRange', verbose_name='gamme'),
        ),
        migrations.CreateModel(
            name='GroupOfProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('brand', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_products', to='catalog.Brand')),
                ('group_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='catalog.Product')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarouselBrandImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('brand', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_images', to='catalog.Brand')),
                ('carousel_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('value', models.CharField(blank=True, max_length=50, null=True, verbose_name='valeur')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Attribute')),
                ('product', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='catalog.Product')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
